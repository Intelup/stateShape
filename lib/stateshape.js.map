{"version":3,"sources":["webpack://stateshape/webpack/universalModuleDefinition","webpack://stateshape/webpack/bootstrap","webpack://stateshape/./src/index.js"],"names":["stateShape","object","deepClone","obj","clone","Object","assign","keys","forEach","key","Array","isArray","length","from","objectsArrayMerge","arr","array","flattenizeArray","map","entries","item","reduce","prev","curr","removeByUuid","objs","uuid","transformArrayToObjs","values","filter","concat","apply","name","propertyName","anotherParameters","val","every","x","allIds","result","byUuid","row","Set","console","log","anotherObjects","objectsArray","parameter","objects","objectsMerge"],"mappings":"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","file":"stateshape.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"stateshape\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"stateshape\"] = factory();\n\telse\n\t\troot[\"stateshape\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","/* eslint-disable */\n\nconst stateShape = {\n  object: {\n      deepClone (obj) {\n          const clone = Object.assign({}, obj)\n          Object.keys(clone).forEach(\n              key => (clone[key] = typeof obj[key] === 'object' ? this.deepClone(obj[key]) : obj[key]),\n          )\n          return Array.isArray(obj) ? (clone.length = obj.length) && Array.from(clone) : clone\n      },\n\n      objectsArrayMerge(arr) {\n          return stateShape.array.flattenizeArray(arr.map(item => (\n              Object.entries(item)\n          ))).reduce(function(prev,curr){prev[curr[0]]=curr[1];return prev;},{})\n      },\n\n      removeByUuid: (objs, uuid) => transformArrayToObjs(Object.values(objs).filter(obj => obj.uuid !== uuid))\n  },\n\n  array: {\n      flattenizeArray (array) {\n          return [\n              ...[].concat.apply(\n                  [], array\n              )\n          ]\n      },\n      transformArrayToObjs (name, array, propertyName = 'uuid') {\n          let anotherParameters = this.flattenizeArray(\n              array.map(item => (\n                      Object.entries(item).map(val => {\n                          if(Array.isArray(val[1]) && val[1].every(item => (typeof item == 'object'))){\n                              return val[0]\n                          }\n                          return null\n                      }).filter(x => x)\n                  )\n              )\n          )\n\n          let allIds = array.map(item => item.uuid)\n\n          let result = {}\n          result[name] = {\n              byUuid: Object.values(array).reduce((obj, row) => {\n                  // allIds.push(row[propertyName])\n\n                  row = Object.entries(row).map(val => {\n                      // console.log('VAL: ', val)\n\n                      if(Array.isArray(val[1]) && val[1].every(item => (typeof item == 'object'))){\n                          val[1] = val[1].map(item => item[propertyName])\n                      }\n\n                      // console.log('RETURNED VAL: ', val)\n                      return val\n                  }).reduce(function(prev,curr){prev[curr[0]]=curr[1];return prev;},{})\n\n                  // console.log('ROW: ', row)\n                  return ((obj[row[propertyName]] = row), obj)\n              }, {}),\n\n              allIds: allIds\n          }\n\n          anotherParameters = [...new Set(anotherParameters)]\n          console.log('Another Parameters: ', anotherParameters)\n          if (anotherParameters.length > 0){\n              let anotherObjects = this.flattenizeArray(\n                  anotherParameters.map(parameter => {\n                      let objectsArray = this.flattenizeArray(array.map(item => item[parameter]))\n\n                      let objects = this.transformArrayToObjs(parameter, objectsArray, propertyName)\n\n                      return objects\n                  })\n              )\n\n              console.log('Another Objects: ', anotherObjects)\n\n              let objectsMerge = stateShape.object.objectsArrayMerge(anotherObjects)\n\n              result = Object.assign(result, objectsMerge)\n          }\n          return result\n      }\n\n  }\n}\n\nexport default stateShape\n"],"sourceRoot":""}